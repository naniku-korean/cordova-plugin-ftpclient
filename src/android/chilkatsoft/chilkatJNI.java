/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class chilkatJNI {
  public final static native byte[] SWIG_JavaArrayOutUchar(long jarg1, long jarg2, long jarg3);
  public final static native void SWIG_JavaArrayInUchar(long jarg1, long jarg2, CkByteData jarg2_, byte[] jarg3);
  public final static native void SYSTEMTIME_wYear_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wYear_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wMonth_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wMonth_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wDayOfWeek_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wDayOfWeek_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wDay_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wDay_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wHour_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wHour_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wMinute_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wMinute_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wSecond_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wSecond_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wMilliseconds_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wMilliseconds_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native long new_SYSTEMTIME();
  public final static native void delete_SYSTEMTIME(long jarg1);
  public final static native long new_CkString();
  public final static native void delete_CkString(long jarg1);
  public final static native boolean CkString_loadFile(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native char CkString_charAt(long jarg1, CkString jarg1_, int jarg2);
  public final static native int CkString_intValue(long jarg1, CkString jarg1_);
  public final static native double CkString_doubleValue(long jarg1, CkString jarg1_);
  public final static native int CkString_countCharOccurances(long jarg1, CkString jarg1_, char jarg2);
  public final static native void CkString_appendCurrentDateRfc822(long jarg1, CkString jarg1_);
  public final static native void CkString_setStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_endsWith(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_endsWithStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_beginsWithStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native int CkString_indexOf(long jarg1, CkString jarg1_, String jarg2);
  public final static native int CkString_indexOfStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native int CkString_replaceAll(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_, long jarg3, CkString jarg3_);
  public final static native boolean CkString_replaceFirst(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_, long jarg3, CkString jarg3_);
  public final static native long CkString_substring(long jarg1, CkString jarg1_, int jarg2, int jarg3);
  public final static native boolean CkString_matchesStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_matches(long jarg1, CkString jarg1_, String jarg2);
  public final static native long CkString_getChar(long jarg1, CkString jarg1_, int jarg2);
  public final static native int CkString_removeAll(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_removeFirst(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_chopAtStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_urlDecode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_urlEncode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_base64Decode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_base64Encode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_qpDecode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_qpEncode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_hexDecode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_hexEncode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_entityDecode(long jarg1, CkString jarg1_);
  public final static native void CkString_entityEncode(long jarg1, CkString jarg1_);
  public final static native void CkString_appendUtf8(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_appendAnsi(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_clear(long jarg1, CkString jarg1_);
  public final static native void CkString_prepend(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_appendInt(long jarg1, CkString jarg1_, int jarg2);
  public final static native void CkString_append(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_appendChar(long jarg1, CkString jarg1_, char jarg2);
  public final static native void CkString_appendN(long jarg1, CkString jarg1_, String jarg2, int jarg3);
  public final static native void CkString_appendStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_appendEnc(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native String CkString_getEnc(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_setString(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_setStringAnsi(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_setStringUtf8(long jarg1, CkString jarg1_, String jarg2);
  public final static native String CkString_getAnsi(long jarg1, CkString jarg1_);
  public final static native String CkString_getUtf8(long jarg1, CkString jarg1_);
  public final static native int CkString_compareStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkString_getString(long jarg1, CkString jarg1_);
  public final static native int CkString_getSizeUtf8(long jarg1, CkString jarg1_);
  public final static native int CkString_getSizeAnsi(long jarg1, CkString jarg1_);
  public final static native int CkString_getNumChars(long jarg1, CkString jarg1_);
  public final static native void CkString_trim(long jarg1, CkString jarg1_);
  public final static native void CkString_trim2(long jarg1, CkString jarg1_);
  public final static native void CkString_trimInsideSpaces(long jarg1, CkString jarg1_);
  public final static native int CkString_replaceAllOccurances(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native boolean CkString_replaceFirstOccurance(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native void CkString_toCRLF(long jarg1, CkString jarg1_);
  public final static native void CkString_toLF(long jarg1, CkString jarg1_);
  public final static native void CkString_eliminateChar(long jarg1, CkString jarg1_, char jarg2, int jarg3);
  public final static native char CkString_lastChar(long jarg1, CkString jarg1_);
  public final static native void CkString_shorten(long jarg1, CkString jarg1_, int jarg2);
  public final static native void CkString_toLowerCase(long jarg1, CkString jarg1_);
  public final static native void CkString_toUpperCase(long jarg1, CkString jarg1_);
  public final static native void CkString_encodeXMLSpecial(long jarg1, CkString jarg1_);
  public final static native void CkString_decodeXMLSpecial(long jarg1, CkString jarg1_);
  public final static native boolean CkString_containsSubstring(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_containsSubstringNoCase(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_equals(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_equalsStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_equalsIgnoreCase(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_equalsIgnoreCaseStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_removeChunk(long jarg1, CkString jarg1_, int jarg2, int jarg3);
  public final static native void CkString_removeCharOccurances(long jarg1, CkString jarg1_, char jarg2);
  public final static native void CkString_replaceChar(long jarg1, CkString jarg1_, char jarg2, char jarg3);
  public final static native void CkString_chopAtFirstChar(long jarg1, CkString jarg1_, char jarg2);
  public final static native boolean CkString_saveToFile(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native long CkString_split(long jarg1, CkString jarg1_, char jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native long CkString_split2(long jarg1, CkString jarg1_, String jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native long CkString_tokenize(long jarg1, CkString jarg1_, String jarg2);
  public final static native long CkString_splitAtWS(long jarg1, CkString jarg1_);
  public final static native boolean CkString_beginsWith(long jarg1, CkString jarg1_, String jarg2);
  public final static native long new_CkDateTime();
  public final static native void delete_CkDateTime(long jarg1);
  public final static native int CkDateTime_get_IsDst(long jarg1, CkDateTime jarg1_);
  public final static native int CkDateTime_get_UtcOffset(long jarg1, CkDateTime jarg1_);
  public final static native void CkDateTime_SetFromCurrentSystemTime(long jarg1, CkDateTime jarg1_);
  public final static native boolean CkDateTime_SetFromRfc822(long jarg1, CkDateTime jarg1_, String jarg2);
  public final static native int CkDateTime_GetAsUnixTime(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native long CkDateTime_GetAsUnixTime64(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native double CkDateTime_GetAsOleDate(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native int CkDateTime_GetAsDosDate(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native long CkDateTime_GetAsDateTimeTicks(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native void CkDateTime_SetFromUnixTime(long jarg1, CkDateTime jarg1_, boolean jarg2, int jarg3);
  public final static native void CkDateTime_SetFromUnixTime64(long jarg1, CkDateTime jarg1_, boolean jarg2, long jarg3);
  public final static native void CkDateTime_SetFromOleDate(long jarg1, CkDateTime jarg1_, boolean jarg2, double jarg3);
  public final static native void CkDateTime_SetFromDosDate(long jarg1, CkDateTime jarg1_, boolean jarg2, int jarg3);
  public final static native void CkDateTime_SetFromDateTimeTicks(long jarg1, CkDateTime jarg1_, boolean jarg2, long jarg3);
  public final static native boolean CkDateTime_Serialize(long jarg1, CkDateTime jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkDateTime_serialize(long jarg1, CkDateTime jarg1_);
  public final static native void CkDateTime_DeSerialize(long jarg1, CkDateTime jarg1_, String jarg2);
  public final static native boolean CkDateTime_AddDays(long jarg1, CkDateTime jarg1_, int jarg2);
  public final static native boolean CkDateTime_GetAsRfc822(long jarg1, CkDateTime jarg1_, boolean jarg2, long jarg3, CkString jarg3_);
  public final static native String CkDateTime_getAsRfc822(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native long new_CkDtObj();
  public final static native void delete_CkDtObj(long jarg1);
  public final static native boolean CkDtObj_get_Utc(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Utc(long jarg1, CkDtObj jarg1_, boolean jarg2);
  public final static native int CkDtObj_get_Year(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Year(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Month(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Month(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Day(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Day(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Hour(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Hour(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Minute(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Minute(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Second(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Second(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_StructTmYear(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_StructTmYear(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_StructTmMonth(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_StructTmMonth(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native boolean CkDtObj_Serialize(long jarg1, CkDtObj jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkDtObj_serialize(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_DeSerialize(long jarg1, CkDtObj jarg1_, String jarg2);
  public final static native long new_CkByteData();
  public final static native void delete_CkByteData(long jarg1);
  public final static native byte[] CkByteData_toByteArray(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_appendByteArray(long jarg1, CkByteData jarg1_, byte[] jarg2);
  public final static native long CkByteData_getRange(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native String CkByteData_getRangeStr(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native String CkByteData_to_s(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_appendRandom(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native void CkByteData_appendInt(long jarg1, CkByteData jarg1_, int jarg2, boolean jarg3);
  public final static native void CkByteData_appendShort(long jarg1, CkByteData jarg1_, short jarg2, boolean jarg3);
  public final static native String CkByteData_getEncodedRange(long jarg1, CkByteData jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void CkByteData_appendRange(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_, int jarg3, int jarg4);
  public final static native void CkByteData_ensureBuffer(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native int CkByteData_findBytes2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native int CkByteData_findBytes(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkByteData_beginsWith2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native boolean CkByteData_beginsWith(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_);
  public final static native void CkByteData_removeChunk(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native void CkByteData_byteSwap4321(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_pad(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native void CkByteData_unpad(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native boolean CkByteData_is7bit(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_clear(long jarg1, CkByteData jarg1_);
  public final static native int CkByteData_getSize(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_appendEncoded(long jarg1, CkByteData jarg1_, String jarg2, String jarg3);
  public final static native void CkByteData_encode(long jarg1, CkByteData jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native long CkByteData_getData(long jarg1, CkByteData jarg1_);
  public final static native long CkByteData_getBytes(long jarg1, CkByteData jarg1_);
  public final static native String CkByteData_getEncoded(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native void CkByteData_append2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native boolean CkByteData_equals2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native boolean CkByteData_equals(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_);
  public final static native void CkByteData_appendStr(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native void CkByteData_appendChar(long jarg1, CkByteData jarg1_, char jarg2);
  public final static native short CkByteData_getByte(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native char CkByteData_getChar(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native long CkByteData_getUInt(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native int CkByteData_getInt(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native int CkByteData_getUShort(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native short CkByteData_getShort(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native boolean CkByteData_loadFile(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native boolean CkByteData_saveFile(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native boolean CkByteData_appendFile(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native void CkByteData_shorten(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native long new_CkCert();
  public final static native void delete_CkCert(long jarg1);
  public final static native void CkCert_LastErrorXml(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkCert_LastErrorHtml(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkCert_LastErrorText(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkCert_get_LastErrorHtml(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_lastErrorHtml(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_LastErrorText(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_lastErrorText(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_LastErrorXml(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_lastErrorXml(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_Version(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_version(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_DebugLogFilePath(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_debugLogFilePath(long jarg1, CkCert jarg1_);
  public final static native void CkCert_put_DebugLogFilePath(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_get_VerboseLogging(long jarg1, CkCert jarg1_);
  public final static native void CkCert_put_VerboseLogging(long jarg1, CkCert jarg1_, boolean jarg2);
  public final static native boolean CkCert_SaveLastError(long jarg1, CkCert jarg1_, String jarg2);
  public final static native void CkCert_get_AuthorityKeyId(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_authorityKeyId(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_AvoidWindowsPkAccess(long jarg1, CkCert jarg1_);
  public final static native void CkCert_put_AvoidWindowsPkAccess(long jarg1, CkCert jarg1_, boolean jarg2);
  public final static native int CkCert_get_CertVersion(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_CspName(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_cspName(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_Expired(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_ForClientAuthentication(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_ForCodeSigning(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_ForSecureEmail(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_ForServerAuthentication(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_ForTimeStamping(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_HasKeyContainer(long jarg1, CkCert jarg1_);
  public final static native long CkCert_get_IntendedKeyUsage(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_IsRoot(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_IssuerC(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_issuerC(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_IssuerCN(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_issuerCN(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_IssuerDN(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_issuerDN(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_IssuerE(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_issuerE(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_IssuerL(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_issuerL(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_IssuerO(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_issuerO(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_IssuerOU(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_issuerOU(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_IssuerS(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_issuerS(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_KeyContainerName(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_keyContainerName(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_MachineKeyset(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_OcspUrl(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_ocspUrl(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_PrivateKeyExportable(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_Revoked(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_Rfc822Name(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_rfc822Name(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_SelfSigned(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SerialNumber(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_serialNumber(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_Sha1Thumbprint(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_sha1Thumbprint(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_SignatureVerified(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_Silent(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SubjectC(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_subjectC(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SubjectCN(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_subjectCN(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SubjectDN(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_subjectDN(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SubjectE(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_subjectE(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SubjectKeyId(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_subjectKeyId(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SubjectL(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_subjectL(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SubjectO(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_subjectO(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SubjectOU(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_subjectOU(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_SubjectS(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_subjectS(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_get_TrustedRoot(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_ValidFrom(long jarg1, CkCert jarg1_, long jarg2, SYSTEMTIME jarg2_);
  public final static native void CkCert_get_ValidFromStr(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_validFromStr(long jarg1, CkCert jarg1_);
  public final static native void CkCert_get_ValidTo(long jarg1, CkCert jarg1_, long jarg2, SYSTEMTIME jarg2_);
  public final static native void CkCert_get_ValidToStr(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_validToStr(long jarg1, CkCert jarg1_);
  public final static native int CkCert_CheckRevoked(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_ExportCertDer(long jarg1, CkCert jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkCert_ExportCertDerFile(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_ExportCertPem(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_exportCertPem(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_ExportCertPemFile(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_ExportCertXml(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_exportCertXml(long jarg1, CkCert jarg1_);
  public final static native long CkCert_ExportPrivateKey(long jarg1, CkCert jarg1_);
  public final static native long CkCert_ExportPublicKey(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_ExportToPfxData(long jarg1, CkCert jarg1_, String jarg2, boolean jarg3, long jarg4, CkByteData jarg4_);
  public final static native boolean CkCert_ExportToPfxFile(long jarg1, CkCert jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long CkCert_FindIssuer(long jarg1, CkCert jarg1_);
  public final static native long CkCert_GetCertChain(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_GetEncoded(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_getEncoded(long jarg1, CkCert jarg1_);
  public final static native String CkCert_encoded(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_GetExtensionAsXml(long jarg1, CkCert jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkCert_getExtensionAsXml(long jarg1, CkCert jarg1_, String jarg2);
  public final static native String CkCert_extensionAsXml(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_GetPrivateKeyPem(long jarg1, CkCert jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCert_getPrivateKeyPem(long jarg1, CkCert jarg1_);
  public final static native String CkCert_privateKeyPem(long jarg1, CkCert jarg1_);
  public final static native long CkCert_GetValidFromDt(long jarg1, CkCert jarg1_);
  public final static native long CkCert_GetValidToDt(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_HasPrivateKey(long jarg1, CkCert jarg1_);
  public final static native boolean CkCert_LoadByCommonName(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_LoadByEmailAddress(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_LoadByIssuerAndSerialNumber(long jarg1, CkCert jarg1_, String jarg2, String jarg3);
  public final static native boolean CkCert_LoadFromBase64(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_LoadFromBinary(long jarg1, CkCert jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkCert_LoadFromBinary2(long jarg1, CkCert jarg1_, long jarg2, long jarg3);
  public final static native boolean CkCert_LoadFromFile(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_LoadPem(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_LoadPfxData(long jarg1, CkCert jarg1_, long jarg2, CkByteData jarg2_, String jarg3);
  public final static native boolean CkCert_LoadPfxData2(long jarg1, CkCert jarg1_, long jarg2, long jarg3, String jarg4);
  public final static native boolean CkCert_LoadPfxFile(long jarg1, CkCert jarg1_, String jarg2, String jarg3);
  public final static native boolean CkCert_PemFileToDerFile(long jarg1, CkCert jarg1_, String jarg2, String jarg3);
  public final static native boolean CkCert_SaveToFile(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_SetFromEncoded(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_SetPrivateKey(long jarg1, CkCert jarg1_, long jarg2);
  public final static native boolean CkCert_SetPrivateKeyPem(long jarg1, CkCert jarg1_, String jarg2);
  public final static native boolean CkCert_UseCertVault(long jarg1, CkCert jarg1_, long jarg2, CkXmlCertVault jarg2_);
  public final static native boolean CkCert_VerifySignature(long jarg1, CkCert jarg1_);
  public final static native long new_CkCertChain();
  public final static native void delete_CkCertChain(long jarg1);
  public final static native void CkCertChain_LastErrorXml(long jarg1, CkCertChain jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkCertChain_LastErrorHtml(long jarg1, CkCertChain jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkCertChain_LastErrorText(long jarg1, CkCertChain jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkCertChain_get_LastErrorHtml(long jarg1, CkCertChain jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCertChain_lastErrorHtml(long jarg1, CkCertChain jarg1_);
  public final static native void CkCertChain_get_LastErrorText(long jarg1, CkCertChain jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCertChain_lastErrorText(long jarg1, CkCertChain jarg1_);
  public final static native void CkCertChain_get_LastErrorXml(long jarg1, CkCertChain jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCertChain_lastErrorXml(long jarg1, CkCertChain jarg1_);
  public final static native void CkCertChain_get_Version(long jarg1, CkCertChain jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCertChain_version(long jarg1, CkCertChain jarg1_);
  public final static native void CkCertChain_get_DebugLogFilePath(long jarg1, CkCertChain jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkCertChain_debugLogFilePath(long jarg1, CkCertChain jarg1_);
  public final static native void CkCertChain_put_DebugLogFilePath(long jarg1, CkCertChain jarg1_, String jarg2);
  public final static native boolean CkCertChain_get_VerboseLogging(long jarg1, CkCertChain jarg1_);
  public final static native void CkCertChain_put_VerboseLogging(long jarg1, CkCertChain jarg1_, boolean jarg2);
  public final static native boolean CkCertChain_SaveLastError(long jarg1, CkCertChain jarg1_, String jarg2);
  public final static native int CkCertChain_get_NumCerts(long jarg1, CkCertChain jarg1_);
  public final static native int CkCertChain_get_NumExpiredCerts(long jarg1, CkCertChain jarg1_);
  public final static native boolean CkCertChain_get_ReachesRoot(long jarg1, CkCertChain jarg1_);
  public final static native long CkCertChain_GetCert(long jarg1, CkCertChain jarg1_, int jarg2);
  public final static native boolean CkCertChain_IsRootTrusted(long jarg1, CkCertChain jarg1_, long jarg2, CkTrustedRoots jarg2_);
  public final static native boolean CkCertChain_VerifyCertSignatures(long jarg1, CkCertChain jarg1_);
  public final static native long new_CkXmlCertVault();
  public final static native void delete_CkXmlCertVault(long jarg1);
  public final static native void CkXmlCertVault_LastErrorXml(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkXmlCertVault_LastErrorHtml(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkXmlCertVault_LastErrorText(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkXmlCertVault_get_LastErrorHtml(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkXmlCertVault_lastErrorHtml(long jarg1, CkXmlCertVault jarg1_);
  public final static native void CkXmlCertVault_get_LastErrorText(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkXmlCertVault_lastErrorText(long jarg1, CkXmlCertVault jarg1_);
  public final static native void CkXmlCertVault_get_LastErrorXml(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkXmlCertVault_lastErrorXml(long jarg1, CkXmlCertVault jarg1_);
  public final static native void CkXmlCertVault_get_Version(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkXmlCertVault_version(long jarg1, CkXmlCertVault jarg1_);
  public final static native void CkXmlCertVault_get_DebugLogFilePath(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkXmlCertVault_debugLogFilePath(long jarg1, CkXmlCertVault jarg1_);
  public final static native void CkXmlCertVault_put_DebugLogFilePath(long jarg1, CkXmlCertVault jarg1_, String jarg2);
  public final static native boolean CkXmlCertVault_get_VerboseLogging(long jarg1, CkXmlCertVault jarg1_);
  public final static native void CkXmlCertVault_put_VerboseLogging(long jarg1, CkXmlCertVault jarg1_, boolean jarg2);
  public final static native boolean CkXmlCertVault_SaveLastError(long jarg1, CkXmlCertVault jarg1_, String jarg2);
  public final static native void CkXmlCertVault_get_MasterPassword(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkXmlCertVault_masterPassword(long jarg1, CkXmlCertVault jarg1_);
  public final static native void CkXmlCertVault_put_MasterPassword(long jarg1, CkXmlCertVault jarg1_, String jarg2);
  public final static native boolean CkXmlCertVault_AddCert(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkCert jarg2_);
  public final static native boolean CkXmlCertVault_AddCertBinary(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkXmlCertVault_AddCertChain(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkCertChain jarg2_);
  public final static native boolean CkXmlCertVault_AddCertEncoded(long jarg1, CkXmlCertVault jarg1_, String jarg2, String jarg3);
  public final static native boolean CkXmlCertVault_AddCertFile(long jarg1, CkXmlCertVault jarg1_, String jarg2);
  public final static native boolean CkXmlCertVault_AddCertString(long jarg1, CkXmlCertVault jarg1_, String jarg2);
  public final static native boolean CkXmlCertVault_AddPemFile(long jarg1, CkXmlCertVault jarg1_, String jarg2, String jarg3);
  public final static native boolean CkXmlCertVault_AddPfx(long jarg1, CkXmlCertVault jarg1_, long jarg2);
  public final static native boolean CkXmlCertVault_AddPfxBinary(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkByteData jarg2_, String jarg3);
  public final static native boolean CkXmlCertVault_AddPfxEncoded(long jarg1, CkXmlCertVault jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native boolean CkXmlCertVault_AddPfxFile(long jarg1, CkXmlCertVault jarg1_, String jarg2, String jarg3);
  public final static native boolean CkXmlCertVault_GetXml(long jarg1, CkXmlCertVault jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkXmlCertVault_getXml(long jarg1, CkXmlCertVault jarg1_);
  public final static native String CkXmlCertVault_xml(long jarg1, CkXmlCertVault jarg1_);
  public final static native boolean CkXmlCertVault_LoadXml(long jarg1, CkXmlCertVault jarg1_, String jarg2);
  public final static native boolean CkXmlCertVault_LoadXmlFile(long jarg1, CkXmlCertVault jarg1_, String jarg2);
  public final static native boolean CkXmlCertVault_SaveXml(long jarg1, CkXmlCertVault jarg1_, String jarg2);
  public final static native long new_CkTrustedRoots();
  public final static native void delete_CkTrustedRoots(long jarg1);
  public final static native void CkTrustedRoots_LastErrorXml(long jarg1, CkTrustedRoots jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkTrustedRoots_LastErrorHtml(long jarg1, CkTrustedRoots jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkTrustedRoots_LastErrorText(long jarg1, CkTrustedRoots jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkTrustedRoots_get_LastErrorHtml(long jarg1, CkTrustedRoots jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkTrustedRoots_lastErrorHtml(long jarg1, CkTrustedRoots jarg1_);
  public final static native void CkTrustedRoots_get_LastErrorText(long jarg1, CkTrustedRoots jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkTrustedRoots_lastErrorText(long jarg1, CkTrustedRoots jarg1_);
  public final static native void CkTrustedRoots_get_LastErrorXml(long jarg1, CkTrustedRoots jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkTrustedRoots_lastErrorXml(long jarg1, CkTrustedRoots jarg1_);
  public final static native void CkTrustedRoots_get_Version(long jarg1, CkTrustedRoots jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkTrustedRoots_version(long jarg1, CkTrustedRoots jarg1_);
  public final static native void CkTrustedRoots_get_DebugLogFilePath(long jarg1, CkTrustedRoots jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkTrustedRoots_debugLogFilePath(long jarg1, CkTrustedRoots jarg1_);
  public final static native void CkTrustedRoots_put_DebugLogFilePath(long jarg1, CkTrustedRoots jarg1_, String jarg2);
  public final static native boolean CkTrustedRoots_get_VerboseLogging(long jarg1, CkTrustedRoots jarg1_);
  public final static native void CkTrustedRoots_put_VerboseLogging(long jarg1, CkTrustedRoots jarg1_, boolean jarg2);
  public final static native boolean CkTrustedRoots_SaveLastError(long jarg1, CkTrustedRoots jarg1_, String jarg2);
  public final static native int CkTrustedRoots_get_NumCerts(long jarg1, CkTrustedRoots jarg1_);
  public final static native boolean CkTrustedRoots_get_TrustSystemCaRoots(long jarg1, CkTrustedRoots jarg1_);
  public final static native void CkTrustedRoots_put_TrustSystemCaRoots(long jarg1, CkTrustedRoots jarg1_, boolean jarg2);
  public final static native boolean CkTrustedRoots_Activate(long jarg1, CkTrustedRoots jarg1_);
  public final static native boolean CkTrustedRoots_AddCert(long jarg1, CkTrustedRoots jarg1_, long jarg2, CkCert jarg2_);
  public final static native boolean CkTrustedRoots_AddJavaKeyStore(long jarg1, CkTrustedRoots jarg1_, long jarg2);
  public final static native boolean CkTrustedRoots_Deactivate(long jarg1, CkTrustedRoots jarg1_);
  public final static native long CkTrustedRoots_GetCert(long jarg1, CkTrustedRoots jarg1_, int jarg2);
  public final static native boolean CkTrustedRoots_LoadCaCertsPem(long jarg1, CkTrustedRoots jarg1_, String jarg2);
  public final static native long new_CkFtp2();
  public final static native void delete_CkFtp2(long jarg1);
  public final static native void CkFtp2_LastErrorXml(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkFtp2_LastErrorHtml(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkFtp2_LastErrorText(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkFtp2_get_LastErrorHtml(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_lastErrorHtml(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_LastErrorText(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_lastErrorText(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_LastErrorXml(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_lastErrorXml(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_Version(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_version(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_DebugLogFilePath(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_debugLogFilePath(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_DebugLogFilePath(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_get_VerboseLogging(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_VerboseLogging(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_SaveLastError(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_Account(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_account(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_Account(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_ActivePortRangeEnd(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ActivePortRangeEnd(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native int CkFtp2_get_ActivePortRangeStart(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ActivePortRangeStart(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native long CkFtp2_get_AllocateSize(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AllocateSize(long jarg1, CkFtp2 jarg1_, long jarg2);
  public final static native boolean CkFtp2_get_AllowMlsd(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AllowMlsd(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native long CkFtp2_get_AsyncBytesReceived(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_AsyncBytesReceivedStr(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_asyncBytesReceivedStr(long jarg1, CkFtp2 jarg1_);
  public final static native long CkFtp2_get_AsyncBytesSent(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_AsyncBytesSentStr(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_asyncBytesSentStr(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_get_AsyncFinished(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_AsyncLog(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_asyncLog(long jarg1, CkFtp2 jarg1_);
  public final static native long CkFtp2_get_AsyncPercentDone(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_get_AsyncSuccess(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_get_AuthSsl(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AuthSsl(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_AuthTls(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AuthTls(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_AutoFeat(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AutoFeat(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_AutoFix(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AutoFix(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_AutoGetSizeForProgress(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AutoGetSizeForProgress(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_AutoOptsUtf8(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AutoOptsUtf8(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_AutoSetUseEpsv(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AutoSetUseEpsv(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_AutoSyst(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AutoSyst(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_AutoXcrc(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_AutoXcrc(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native int CkFtp2_get_BandwidthThrottleDown(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_BandwidthThrottleDown(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native int CkFtp2_get_BandwidthThrottleUp(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_BandwidthThrottleUp(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_ClientIpAddress(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_clientIpAddress(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ClientIpAddress(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_CommandCharset(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_commandCharset(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_CommandCharset(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_ConnectFailReason(long jarg1, CkFtp2 jarg1_);
  public final static native int CkFtp2_get_ConnectTimeout(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ConnectTimeout(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_get_ConnectVerified(long jarg1, CkFtp2 jarg1_);
  public final static native int CkFtp2_get_CrlfMode(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_CrlfMode(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_DirListingCharset(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_dirListingCharset(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_DirListingCharset(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_DownloadTransferRate(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_ForcePortIpAddress(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_forcePortIpAddress(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ForcePortIpAddress(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_Greeting(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_greeting(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_get_HasModeZ(long jarg1, CkFtp2 jarg1_);
  public final static native int CkFtp2_get_HeartbeatMs(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_HeartbeatMs(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_Hostname(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_hostname(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_Hostname(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_HttpProxyAuthMethod(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_httpProxyAuthMethod(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_HttpProxyAuthMethod(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_HttpProxyDomain(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_httpProxyDomain(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_HttpProxyDomain(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_HttpProxyHostname(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_httpProxyHostname(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_HttpProxyHostname(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_HttpProxyPassword(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_httpProxyPassword(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_HttpProxyPassword(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_HttpProxyPort(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_HttpProxyPort(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_HttpProxyUsername(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_httpProxyUsername(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_HttpProxyUsername(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_IdleTimeoutMs(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_IdleTimeoutMs(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_get_IsConnected(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_get_KeepSessionLog(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_KeepSessionLog(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native void CkFtp2_get_LastReply(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_lastReply(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_ListPattern(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_listPattern(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ListPattern(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_get_LoginVerified(long jarg1, CkFtp2 jarg1_);
  public final static native int CkFtp2_get_NumFilesAndDirs(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_get_PartialTransfer(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_get_Passive(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_Passive(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_PassiveUseHostAddr(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_PassiveUseHostAddr(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native void CkFtp2_get_Password(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_password(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_Password(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_PercentDoneScale(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_PercentDoneScale(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native int CkFtp2_get_Port(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_Port(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_get_PreferIpv6(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_PreferIpv6(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_PreferNlst(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_PreferNlst(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native int CkFtp2_get_ProgressMonSize(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ProgressMonSize(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_ProxyHostname(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_proxyHostname(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ProxyHostname(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_ProxyMethod(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ProxyMethod(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_ProxyPassword(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_proxyPassword(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ProxyPassword(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_ProxyPort(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ProxyPort(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_ProxyUsername(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_proxyUsername(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ProxyUsername(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_ReadTimeout(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_ReadTimeout(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_get_RequireSslCertVerify(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_RequireSslCertVerify(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native boolean CkFtp2_get_RestartNext(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_RestartNext(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native int CkFtp2_get_SendBufferSize(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SendBufferSize(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_SessionLog(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_sessionLog(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_get_SkipFinalReply(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SkipFinalReply(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native int CkFtp2_get_SoRcvBuf(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SoRcvBuf(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native int CkFtp2_get_SoSndBuf(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SoSndBuf(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_SocksHostname(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_socksHostname(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SocksHostname(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_SocksPassword(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_socksPassword(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SocksPassword(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_SocksPort(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SocksPort(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native void CkFtp2_get_SocksUsername(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_socksUsername(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SocksUsername(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_get_SocksVersion(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SocksVersion(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_get_Ssl(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_Ssl(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native void CkFtp2_get_SslAllowedCiphers(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_sslAllowedCiphers(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SslAllowedCiphers(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_SslProtocol(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_sslProtocol(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SslProtocol(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_get_SslServerCertVerified(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_SyncMustMatch(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_syncMustMatch(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SyncMustMatch(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_SyncMustNotMatch(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_syncMustNotMatch(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SyncMustNotMatch(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_SyncPreview(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_syncPreview(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_TlsCipherSuite(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_tlsCipherSuite(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_get_TlsVersion(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_tlsVersion(long jarg1, CkFtp2 jarg1_);
  public final static native int CkFtp2_get_UploadTransferRate(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_get_UseEpsv(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_UseEpsv(long jarg1, CkFtp2 jarg1_, boolean jarg2);
  public final static native void CkFtp2_get_Username(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_username(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_Username(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_get_SyncedFiles(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_syncedFiles(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_put_SyncedFiles(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_AppendFile(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_AppendFileFromBinaryData(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkByteData jarg3_);
  public final static native boolean CkFtp2_AppendFileFromTextData(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void CkFtp2_AsyncAbort(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_AsyncAppendFileStart(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_AsyncGetFileStart(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_AsyncPutFileStart(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_ChangeRemoteDir(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_CheckConnection(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_ClearControlChannel(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_ClearDirCache(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_ClearSessionLog(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_Connect(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_ConnectOnly(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_ConvertToTls(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_CreatePlan(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_createPlan(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_CreateRemoteDir(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_DeleteMatching(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_DeleteRemoteFile(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_DeleteTree(long jarg1, CkFtp2 jarg1_);
  public final static native int CkFtp2_DetermineProxyMethod(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_DetermineSettings(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_determineSettings(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_DirTreeXml(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_dirTreeXml(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_Disconnect(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_DownloadTree(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_Feat(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_feat(long jarg1, CkFtp2 jarg1_);
  public final static native long CkFtp2_GetCreateDt(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native long CkFtp2_GetCreateDtByName(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_GetCreateFTime(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3);
  public final static native boolean CkFtp2_GetCreateTime(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, SYSTEMTIME jarg3_);
  public final static native boolean CkFtp2_GetCreateTimeByName(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, SYSTEMTIME jarg3_);
  public final static native boolean CkFtp2_GetCreateTimeByNameStr(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getCreateTimeByNameStr(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native String CkFtp2_createTimeByNameStr(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_GetCreateTimeStr(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getCreateTimeStr(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native String CkFtp2_createTimeStr(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_GetCurrentRemoteDir(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_getCurrentRemoteDir(long jarg1, CkFtp2 jarg1_);
  public final static native String CkFtp2_currentRemoteDir(long jarg1, CkFtp2 jarg1_);
  public final static native int CkFtp2_GetDirCount(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_GetFile(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_GetFilename(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getFilename(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native String CkFtp2_filename(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_GetGroup(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getGroup(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native String CkFtp2_group(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_GetIsDirectory(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_GetIsSymbolicLink(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native long CkFtp2_GetLastAccessDt(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native long CkFtp2_GetLastAccessDtByName(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_GetLastAccessFTime(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3);
  public final static native boolean CkFtp2_GetLastAccessTime(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, SYSTEMTIME jarg3_);
  public final static native boolean CkFtp2_GetLastAccessTimeByName(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, SYSTEMTIME jarg3_);
  public final static native boolean CkFtp2_GetLastAccessTimeByNameStr(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getLastAccessTimeByNameStr(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native String CkFtp2_lastAccessTimeByNameStr(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_GetLastAccessTimeStr(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getLastAccessTimeStr(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native String CkFtp2_lastAccessTimeStr(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native long CkFtp2_GetLastModDt(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native long CkFtp2_GetLastModDtByName(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_GetLastModifiedFTime(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3);
  public final static native boolean CkFtp2_GetLastModifiedTime(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, SYSTEMTIME jarg3_);
  public final static native boolean CkFtp2_GetLastModifiedTimeByName(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, SYSTEMTIME jarg3_);
  public final static native boolean CkFtp2_GetLastModifiedTimeByNameStr(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getLastModifiedTimeByNameStr(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native String CkFtp2_lastModifiedTimeByNameStr(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_GetLastModifiedTimeStr(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getLastModifiedTimeStr(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native String CkFtp2_lastModifiedTimeStr(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_GetOwner(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getOwner(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native String CkFtp2_owner(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_GetPermType(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getPermType(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native String CkFtp2_permType(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_GetPermissions(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getPermissions(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native String CkFtp2_permissions(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_GetRemoteFileBinaryData(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkByteData jarg3_);
  public final static native boolean CkFtp2_GetRemoteFileTextC(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3, long jarg4, CkString jarg4_);
  public final static native String CkFtp2_getRemoteFileTextC(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native String CkFtp2_remoteFileTextC(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_GetRemoteFileTextData(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getRemoteFileTextData(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native String CkFtp2_remoteFileTextData(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native int CkFtp2_GetSize(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native long CkFtp2_GetSize64(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native int CkFtp2_GetSizeByName(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native long CkFtp2_GetSizeByName64(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_GetSizeStr(long jarg1, CkFtp2 jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getSizeStr(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native String CkFtp2_sizeStr(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_GetSizeStrByName(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getSizeStrByName(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native String CkFtp2_sizeStrByName(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native long CkFtp2_GetSslServerCert(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_GetTextDirListing(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getTextDirListing(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native String CkFtp2_textDirListing(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_GetXmlDirListing(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_getXmlDirListing(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native String CkFtp2_xmlDirListing(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_IsUnlocked(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_LoginAfterConnectOnly(long jarg1, CkFtp2 jarg1_);
  public final static native int CkFtp2_MGetFiles(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native int CkFtp2_MPutFiles(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_NlstXml(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_nlstXml(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_Noop(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_PutFile(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_PutFileFromBinaryData(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkByteData jarg3_);
  public final static native boolean CkFtp2_PutFileFromTextData(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native boolean CkFtp2_PutPlan(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_PutTree(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_Quote(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_RemoveRemoteDir(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_RenameRemoteFile(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_SendCommand(long jarg1, CkFtp2 jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkFtp2_sendCommand(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_SetModeZ(long jarg1, CkFtp2 jarg1_);
  public final static native void CkFtp2_SetOldestDate(long jarg1, CkFtp2 jarg1_, long jarg2, SYSTEMTIME jarg2_);
  public final static native void CkFtp2_SetOldestDateStr(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_SetRemoteFileDateTime(long jarg1, CkFtp2 jarg1_, long jarg2, SYSTEMTIME jarg2_, String jarg3);
  public final static native boolean CkFtp2_SetRemoteFileDateTimeStr(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_SetRemoteFileDt(long jarg1, CkFtp2 jarg1_, long jarg2, CkDateTime jarg2_, String jarg3);
  public final static native void CkFtp2_SetSslCertRequirement(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_SetSslClientCert(long jarg1, CkFtp2 jarg1_, long jarg2, CkCert jarg2_);
  public final static native boolean CkFtp2_SetSslClientCertPem(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_SetSslClientCertPfx(long jarg1, CkFtp2 jarg1_, String jarg2, String jarg3);
  public final static native boolean CkFtp2_SetTypeAscii(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_SetTypeBinary(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_Site(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native void CkFtp2_SleepMs(long jarg1, CkFtp2 jarg1_, int jarg2);
  public final static native boolean CkFtp2_Stat(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_ck_stat(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_SyncDeleteRemote(long jarg1, CkFtp2 jarg1_, String jarg2);
  public final static native boolean CkFtp2_SyncLocalDir(long jarg1, CkFtp2 jarg1_, String jarg2, int jarg3);
  public final static native boolean CkFtp2_SyncLocalTree(long jarg1, CkFtp2 jarg1_, String jarg2, int jarg3);
  public final static native boolean CkFtp2_SyncRemoteTree(long jarg1, CkFtp2 jarg1_, String jarg2, int jarg3);
  public final static native boolean CkFtp2_SyncRemoteTree2(long jarg1, CkFtp2 jarg1_, String jarg2, int jarg3, boolean jarg4, boolean jarg5);
  public final static native boolean CkFtp2_Syst(long jarg1, CkFtp2 jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkFtp2_syst(long jarg1, CkFtp2 jarg1_);
  public final static native boolean CkFtp2_UnlockComponent(long jarg1, CkFtp2 jarg1_, String jarg2);
}
